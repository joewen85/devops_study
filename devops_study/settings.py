"""
Django settings for devops_study project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys
import yaml

# read yml file get config variables
try:
    f = open('config.yml')
    CONF = yaml.load(f, Loader=yaml.FullLoader)
except FileNotFoundError:
    msg = """

        Error: No config file found.

        You can run `cp config_example.yml config.yml`, and edit it.
        """
    raise FileNotFoundError(msg)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p7pvqcn5ge@t(ij16@2=v@c%7rlgeq^43@gl_j40u)nrbc9@d-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONF['DEBUG']

ALLOWED_HOSTS = CONF['ALLOWED_HOSTS']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'users',
    'pure_pagination',
    'work_order.apps.WorkOrderConfig',
    'ckeditor',
    'ckeditor_uploader',
    'deploy.apps.DeployConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'devops_study.urls'
AUTH_USER_MODEL = 'users.UserProfile'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': [
                'django.templatetags.static'
            ],
        },
    },
]

WSGI_APPLICATION = 'devops_study.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': CONF['NAME'],
        'USER': CONF['USER'],
        'PASSWORD': CONF['PASSWORD'],
        'HOST': CONF['HOST'],
        'PORT': CONF['PORT'],
        'CONN_MAX_AGE': 5
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

PAGINATION_SETTINGS = {
    'PAGE_RANGE_DISPLAYED': 10,
    'MARGIN_PAGES_DISPLAYED': 2,

    'SHOW_FIRST_PAGE_WHEN_INVALID': True,
}

# CKEDITOR_CONFIGS = {
#     # django-ckeditor默认使用default配置
#     'default': {
#         # 编辑器宽度自适应
#         'width':'auto',
#         'height':'250px',
#         # tab键转换空格数
#         'tabSpaces': 4,
#         # 工具栏风格
#         'toolbar': 'Custom',
#         # 工具栏按钮
#         'toolbar_Custom': [
#             # 表情 代码块
#             ['Smiley', 'CodeSnippet'],
#             # 字体风格
#             ['Bold', 'Italic', 'Underline', 'RemoveFormat', 'Blockquote'],
#             # 字体颜色
#             ['TextColor', 'BGColor'],
#             # 链接
#             ['Link', 'Unlink'],
#             # 列表
#             ['NumberedList', 'BulletedList'],
#             # 最大化
#             ['Maximize']
#         ],
#         # 加入代码块插件
#         'extraPlugins': ','.join(['codesnippet']),
#     }
# }
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = 'pillow'

GITURL = CONF['GITLABURL']
GIILAB_PRIVATE_TOKEN = CONF['GITLAB_PRIVATE_TOKEN']

# cloud setting
AliYun_AK = CONF['ALIYUN']['AliYun_AK']
AliYun_SK = CONF['ALIYUN']['AliYun_SK']
TencentYun_AK = CONF['TENCENT']['Tencent_AK']
TencentYun_SK = CONF['TENCENT']['Tencent_SK']

